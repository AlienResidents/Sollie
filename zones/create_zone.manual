#!/bin/bash

USAGE="
$0 <ZONE NAME>
"

alias zonecfg="/usr/sbin/zonecfg"
alias zoneadm="/usr/sbin/zoneadm"
domainname=`domainname` || domainname=`cat /etc/defaultdomain`
if [ -z "$1" ]
then
	echo -e "$USAGE"
	exit 69
fi
zone_name="$1"
zone_config_file=".$zone_name"

if [ -s "$zone_config_file" ]
then
	echo -e "Creating zone '$zone_name'... \c"
	zonecfg -z $zone_name -f $zone_config_file
	echo -e "Done."
	echo -e "Installing zone '$zone_name'..."
	zoneadm -z $zone_name install
	echo -e "Done."
else
	echo -e "The zone configuration file '$zone_config_file' does not exist."
	echo -e "Should I create this file now? ( y | n )  [y]: \c"
	read create_now
	create_now=`echo $create_now | tr [:upper:] [:lower:]`
	if [ "$create_now" = "y" ] || [ "$create_now" = "" ]
	then
		if [ -s "zone_template" ]
		then
			echo -e "There is a existing zone template file.  Do you want to use this template file? ( y | n ) [y]: \c"
			read use_template
		fi
		use_template=`echo $use_template | tr [:upper:] [:lower:]`
		if [ "$use_template" = "y" ] || [ "$use_template" = "" ]
		then
			# NET_DEVICE
			while [ -z $net_device ]
			do
				interfaces=`netstat -ni|grep [0-9]|egrep -v ^lo|awk '{print $1}'`
				num_interfaces=`echo $interfaces | awk '{print NF}'`
				if [ "$num_interfaces" = "1" ]
				then
					net_device=$interfaces
				else
					echo -e "What network device do you want to use for $zone_name"
					echo -e "$interfaces"
					echo -e "Choose: \c"
					read net_device
				fi
				if [ -z "$net_device" ]
				then
					echo -e "You must choose a valid network device."
					unset net_device
				elif `echo $net_device |grep $interfaces` ]
				then
					echo -e "$net_device is not a valid network device."
					echo -e "You must choose a valid network device."
					unset net_device
				fi
			done
			echo -e "Selected $net_device for $zone_name's physical interface."

			# IP_ADDRESS
			in_dns=`dig $zone_name.$domainname|egrep ^$zone_name | awk '{print $5}'`
			# dig $zone_name.$domainname|egrep ^$zone_name
			if [ -n "$in_dns" ]
			then
				ip_address=$in_dns
			else
				echo -e "What is the IP address that will be assigned to the $net_device in the $zone_name zone? : \c"
				read ip_address
			fi
			echo -e "Selecting $ip_address for the IP address assigned to $net_device in the $zone_name zone."

			# Creating ZONE_NAME zonecfg file
			echo -e "Creating $zone_config_file based upon the zone_template."
			sed "s/ZONE_NAME/$zone_name/g; s/NET_DEVICE/$net_device/g; s/IP_ADDRESS/$ip_address/g; s%RAW_DATA_DEVICE%$raw_data_device%g; s%DATA_DEVICE%$data_device%g;" zone_template > $zone_config_file.temp

			# DATA_DEVICE
			use_lvm=`df -h | egrep -e '\/dev\/md'` || use_lvm="no"
			if [ "$use_lvm" = "no" ]
			then
				sed 's/#Nset /set /g' $zone_config_file.temp > $zone_config_file
				rm $zone_config_file.temp
			else
				sed 's/#Mset /set /g' $zone_config_file.temp > $zone_config_file
				rm $zone_config_file.temp
			fi
		else
			vi $zone_config_file
		fi
		if [ -s $zone_config_file ]
		then
			echo -e "Creating zone..."
		  zonecfg -z $zone_name -f $zone_config_file
			echo -e "Done"
		else
			echo -e "The zone configuration file is empty, so I'm quitting, and getting rid of the empty file... \c"
			if [ -f "$zone_config_file" ]
			then
				rm $zone_config_file
			fi
			echo -e "Done."
		fi
	else
		echo -e "Fine be thay way, I'm quitting now."
		exit 1
	fi
fi

echo -e "Create $zone_name now? ( y | n ) [y] : \c"
read build_now
build_now=`echo $build_now | tr [:upper:] [:lower:]`
if [ -z "$build_now" ] || [ "$build_now" = "y" ]
then
	echo -e "Creating /data/$zone_name... \c"
	mkdir -p /data/$zone_name
	echo -e "Done."

	echo -e "Setting permissions to 700 for /data/$zone_name... "
	chmod 700 /data/$zone_name
	echo -e "Done."

	echo -e "Installing Zone..."
	zoneadm -z $zone_name install
	echo -e "Done installing zone $zone_name."

	echo -e "Modifying files for automated booting of $zone_name..."
	echo "$zone_name" > /data/$zone_name/root/etc/nodename
	echo -e "	/etc/defaultdomain"
	cp /etc/defaultdomain /data/$zone_name/root/etc/
	echo -e "	/etc/defaultrouter"
	cp /etc/defaultrouter /data/$zone_name/root/etc/
	echo -e "	/etc/default/init"
	cp /etc/default/init /data/$zone_name/root/etc/
	echo -e "	/etc/nsswitch.conf"
	cp /etc/nsswitch.conf /data/$zone_name/root/etc/
	echo -e "Setting root password"
	cp /etc/passwd /data/$zone_name/root/etc/passwd
	cp /etc/shadow /data/$zone_name/root/etc/shadow
  chmod 400 /data/$zone_name/root/etc/shadow
	touch /data/$zone_name/root/etc/.NFS4inst_state.domain
	rm /data/$zone_name/root/etc/.UNCONFIGURED
	echo -e "Done."
	
	echo -e "Booting zone $zone_name..."
	zoneadm -z $zone_name boot
	echo -e "Done booting $zone_name."
fi














